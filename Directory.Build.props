<Project>

  <PropertyGroup>

    <LibTorchNugetVersion>1.8.0.7</LibTorchNugetVersion>
    <TorchSharpVersion>0.91.52518</TorchSharpVersion>
    <FSharpCoreVersion>5.0.1</FSharpCoreVersion>
    <!-- Standard nuget.org location -->
    <RestoreSources>https://api.nuget.org/v3/index.json</RestoreSources>
    <DIFFSHARP_TESTGPU Condition="'$(COMPUTERNAME)' == 'MSRC-3617253'">true</DIFFSHARP_TESTGPU>

    <!-- TorchSharp local build packages -->
    <RestoreSources Condition="Exists('$(MSBuildThisFileDirectory)../TorchSharp/bin/packages/Release')">
        $(RestoreSources);$(MSBuildThisFileDirectory)../TorchSharp/bin/packages/Release;
    </RestoreSources>

    <!-- TorchSharp local build packages -->
    <RestoreSources Condition="Exists('$(MSBuildThisFileDirectory)../TorchSharp/bin/packages/Debug')">
        $(RestoreSources);$(MSBuildThisFileDirectory)../TorchSharp/bin/packages/Debug;
    </RestoreSources>

    <!-- TorchSharp CI build packages 
    <RestoreSources>
        $(RestoreSources);
        https://donsyme.pkgs.visualstudio.com/TorchSharp/_packaging/packages2/nuget/v3/index.json
    </RestoreSources>
    -->

    <!-- F# local build packages -->
    <!--     C:\GitHub\dsyme\fsharp>.\build -pack -->
    <RestoreSources Condition="Exists('C:\GitHub\dsyme\fsharp\artifacts\packages\Debug\Shipping')">
      $(RestoreSources);C:\GitHub\dsyme\fsharp\artifacts\packages\Debug\Shipping;
    </RestoreSources>

    <RestoreSources Condition="Exists('C:\GitHub\dsyme\fsharp\artifacts\packages\Release\Shipping')">
      $(RestoreSources);C:\GitHub\dsyme\fsharp\artifacts\packages\Release\Shipping;
    </RestoreSources>

    <!-- Z3 local build packages -->
    <!--     E:\GitHub\dsyme\z3> python scripts/mk_make.py -dash-dash-dotnet -->
    <!--     E:\GitHub\dsyme\z3> cd build -->
    <!--     E:\GitHub\dsyme\z3\build> nmake -->
    <!--
    <RestoreSources Condition="Exists('E:\GitHub\dsyme\z3\build')">
      $(RestoreSources);E:\GitHub\dsyme\z3\build;
    </RestoreSources>
    -->

    <!-- turn on unused variable warnings -->
    <OtherFlags>--warnon:1182 $(OtherFlags)</OtherFlags>
    <!-- turn on documentation warnings -->
    <OtherFlags>--warnon:3390 $(OtherFlags)</OtherFlags>
    <!-- turn off 'experimental' warnings within this codebase, used for Float16/BFloat16 etc  -->
    <OtherFlags>--nowarn:57 $(OtherFlags)</OtherFlags>
    <DefineConstants>SYMBOLIC_SHAPES</DefineConstants>
  </PropertyGroup>

  <PropertyGroup>
     <Version>1.0.0</Version>
     <Authors>Atılım Güneş Baydin, Barak A. Pearlmutter and DiffSharp contributors</Authors>
     <Owners>DiffSharp maintainers</Owners>
     <PackageProjectUrl>https://diffsharp.github.io</PackageProjectUrl>
     <RepositoryUrl>https://github.com/DiffSharp/DiffSharp/</RepositoryUrl>
     <RepositoryBranch>dev</RepositoryBranch>
     <PackageLicenseExpression>BSD-2-Clause</PackageLicenseExpression>
     <RepositoryType>git</RepositoryType>
     <Copyright>Copyright 2014-2020</Copyright>
     <PackageTags>F# fsharp ML AI Machine Learning PyTorch Automatic Differentiation Gradients</PackageTags>


     <!-- local build uses number unique by day -->
     <PackageVersion Condition="'$(GITHUB_ACTIONS)' != 'true'">$(Version)-local-$([System.DateTime]::Now.ToString(`yyMMdd`))</PackageVersion>
     <!-- tagged build on CI uses number -->
     <PackageVersion Condition="'$(GITHUB_ACTIONS)' == 'true' AND '$(GITHUB_REF)' == 'refs/tags/v$(Version)'">$(Version)</PackageVersion>
     <!-- untagged build on CI uses unique -->
     <PackageVersion Condition="'$(GITHUB_ACTIONS)' == 'true' AND '$(GITHUB_REF)' != 'refs/tags/v$(Version)'">$(Version)-preview-$(GITHUB_RUN_ID)</PackageVersion>
     <PackageOutputPath>$(MSBuildThisFileDirectory)bin/packages</PackageOutputPath>

     <NuspecProperties>Authors=$(Authors);Owners=$(Owners);ProjectId=$(MSBuildProjectName);PackageVersion=$(PackageVersion);TorchSharpVersion=$(TorchSharpVerion);LibTorchNugetVersion=$(LibTorchNugetVersion)</NuspecProperties>

  </PropertyGroup>

  <Target Name="Check" BeforeTargets="PrepareForBuild"
          Condition="'$(APPVEYOR_REPO_TAG)' != '' AND '$(APPVEYOR_REPO_TAG_NAME)' != '' AND '$(APPVEYOR_REPO_TAG_NAME)' != '$(Version)'">
      <Error Test="mismatch betwen repo tag '$(APPVEYOR_REPO_TAG_NAME)' and version '$(Version)' in msbuild, refusing to build package" />
  </Target>

</Project>