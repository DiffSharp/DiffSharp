<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!-- configure this manually to reduce the number of test cases -->
    <TINY>false</TINY>
  </PropertyGroup>

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <IsPackable>false</IsPackable>
    <DefineConstants Condition="'$(TINY)' == 'true'">$(DefineConstants);TINY</DefineConstants>
    <DIFFSHARP_TESTGPU Condition="'$(TINY)' == 'true'">false</DIFFSHARP_TESTGPU>
    <PlatformTarget>x64</PlatformTarget>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="PerfMatrix.fs" />
    <Compile Include="BasicTensorOpsPerf.fs" />
    <Compile Include="Program.fs" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="BenchmarkDotNet" Version="0.12.1" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\src\DiffSharp.Core\DiffSharp.Core.fsproj" />
    
    <!-- note, python torch can't easily co-habitate with TorchSHarp torch due to conflicting native binaries -->
    <ProjectReference Include="..\..\src\DiffSharp.Backends.Reference\DiffSharp.Backends.Reference.fsproj" />
    <ProjectReference Include="..\..\src\DiffSharp.Backends.Torch\DiffSharp.Backends.Torch.fsproj" />
	<PackageReference Update="FSharp.Core" Version="$(FSharpCoreVersion)" />
  </ItemGroup>

  <!-- Choose the appropriate version of libtorch for our current OS and environment -->
  <ItemGroup Condition="'$(DIFFSHARP_TESTGPU)' == 'true' AND $([MSBuild]::IsOsPlatform(Linux))">
    <PackageReference Include="libtorch-cuda-10.2-linux-x64" Version="$(LibTorchNugetVersion)" />
  </ItemGroup>

  <ItemGroup Condition="'$(DIFFSHARP_TESTGPU)' == 'true' AND $([MSBuild]::IsOsPlatform(Windows))">
    <PackageReference Include="libtorch-cuda-10.2-win-x64" Version="$(LibTorchNugetVersion)" />
  </ItemGroup>

  <ItemGroup Condition="'$(DIFFSHARP_TESTGPU)' != 'true'">
    <PackageReference Include="libtorch-cpu" Version="$(LibTorchNugetVersion)" />
  </ItemGroup>

</Project>
