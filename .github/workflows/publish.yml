# note, the nuget org token expires around June 2021

name: Build/test/docs/publish

on:
  push:
    branches:
      - dev
    tags:        
      - v*             # Push events to v1.2.3 tag
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100
    - name: Install dependencies
      run: dotnet restore
    - name: Install tool dependencies
      run: dotnet tool restore
    # Release build is used to prepare packages
    - name: Build (Release)
      run: dotnet build --configuration Release --no-restore --verbosity normal
    # Debug build is used to prepare docs
    - name: Build (Debug)
      run: dotnet build --configuration Debug --no-restore --verbosity normal
    - name: Test
      run: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --configuration Release --no-build --verbosity normal
    - name: Run coveralls
      env:
        REPO_COMMIT_AUTHOR=$(git show -s --pretty=format:"%cn")
        REPO_COMMIT_AUTHOR_EMAIL=$(git show -s --pretty=format:"%ce")
        REPO_COMMIT_MESSAGE=$(git show -s --pretty=format:"%s")
      run: >
        dotnet csmacnz.Coveralls
        --opencover -i tests/DiffSharp.Tests/coverage.opencover.xml
        --useRelativePaths
        --repoToken ${{ secrets.COVERALLS_REPO_TOKEN }}
        --commitId ${{ github.sha }}
        --commitBranch ${{ github.ref }}
        --commitAuthor ${{ REPO_COMMIT_AUTHOR }}
        --commitEmail ${{ REPO_COMMIT_AUTHOR_EMAIL }}
        --commitMessage ${{ REPO_COMMIT_MESSAGE }}
        --jobId ${{ github.run_id }}
    # 16 Apr 2021: disabling codecov due to bash uploader security concern
    # - name: Codecov
      # uses: codecov/codecov-action@v1
    - name: Run fsdocs
      run: dotnet fsdocs build --eval --strict --properties Configuration=Release
    - name: Deploy docs
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.PERSONAL_TOKEN }}
        external_repository: DiffSharp/diffsharp.github.io
        publish_dir: ./output
        publish_branch: master
        force_orphan: true

  pack_cpu:

    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100
    - name: Install dependencies
      run: dotnet restore
    - name: Pack
      run: dotnet pack --configuration Release --verbosity normal
    - name: Publish NuGets
      run: dotnet nuget push "bin/packages/*.nupkg" -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_ORG_TOKEN_2020 }} --skip-duplicate

  # Done in a separate job because it downloads the massive Windows CUDA pacakges (though only for reference
  # during the pacakge build, it doesn't actually use them)
  pack_windows_cuda:

    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100
    - name: Install dependencies
      run: dotnet restore
    - name: Pack (DiffSharp-cuda-windows)
      run: dotnet pack --configuration Release --verbosity normal bundles/DiffSharp-cuda-windows
    - name: Publish NuGets
      run: dotnet nuget push "bin/packages/*.nupkg" -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_ORG_TOKEN_2020 }} --skip-duplicate

  # Done in a separate job because it downloads the massive Linux CUDA pacakges (though only for reference
  # during the pacakge build, it doesn't actually use them)
  pack_linux_cuda:

    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100
    - name: Install dependencies
      run: dotnet restore
    - name: Pack (DiffSharp-cuda-linux)
      run: dotnet pack --configuration Release --verbosity normal bundles/DiffSharp-cuda-linux
    - name: Publish NuGets
      run: dotnet nuget push "bin/packages/*.nupkg" -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_ORG_TOKEN_2020 }} --skip-duplicate
